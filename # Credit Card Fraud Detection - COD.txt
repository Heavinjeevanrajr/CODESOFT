# Credit Card Fraud Detection - CODSOFT Task 5

# 1. Import libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# 2. Upload dataset
from google.colab import files
uploaded = files.upload()


# 3. Load and reduce data
df = pd.read_csv(list(uploaded.keys())[0])

# Take only the first 50% of rows
df = df.iloc[:len(df)//2]

df.head()


# 4. Basic exploration
print("Shape:", df.shape)
print("\nInfo:")
print(df.info())
print("\nClass distribution:\n", df['Class'].value_counts())  # 0 = legit, 1 = fraud

# 5. Check imbalance
plt.figure(figsize=(5, 4))
sns.countplot(x='Class', data=df)
plt.title("Fraud vs Non-Fraud")
plt.show()

# 6. Prepare data
X = df.drop('Class', axis=1)
y = df['Class']

# Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 7. Train-test split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# 8. Train model
model = LogisticRegression()
model.fit(X_train, y_train)

# 9. Evaluate
y_pred = model.predict(X_test)
print("\nAccuracy:", accuracy_score(y_test, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# 10. Visualize Confusion Matrix
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Reds',
            xticklabels=['Legit', 'Fraud'], yticklabels=['Legit', 'Fraud'])
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()