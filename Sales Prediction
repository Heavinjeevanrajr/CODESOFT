# Sales Prediction - CODSOFT Task 4

# 1. Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# 2. Upload dataset
from google.colab import files
uploaded = files.upload()

# 3. Load dataset
df = pd.read_csv(list(uploaded.keys())[0])
df.head()

# 4. Basic exploration
print("Shape:", df.shape)
print("\nInfo:")
print(df.info())
print("\nSummary Stats:")
print(df.describe())

# 5. Visualize relationships
sns.pairplot(df)
plt.show()

sns.heatmap(df.corr(), annot=True, cmap='Blues')
plt.title("Feature Correlation")
plt.show()

# 6. Prepare data
X = df[['TV', 'Radio', 'Newspaper']]  # independent variables
y = df['Sales']                       # target

# 7. Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 8. Train model
model = LinearRegression()
model.fit(X_train, y_train)

# 9. Evaluate model
y_pred = model.predict(X_test)

print("\nRÂ² Score:", r2_score(y_test, y_pred))
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))

# 10. Visualize prediction vs actual
plt.scatter(y_test, y_pred, color='green')
plt.xlabel("Actual Sales")
plt.ylabel("Predicted Sales")
plt.title("Actual vs Predicted Sales")
plt.grid(True)
plt.show()
