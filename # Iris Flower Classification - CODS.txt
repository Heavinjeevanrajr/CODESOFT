# Iris Flower Classification - CODSOFT Task 3

# 1. Importing necessary libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# 2. Upload the dataset
from google.colab import files
uploaded = files.upload()

# 3. Load dataset
# Make sure your file is named like 'Iris.csv' or something similar
df = pd.read_csv(list(uploaded.keys())[0])
df.head()

# 4. Basic info
print("Dataset Shape:", df.shape)
print("\nClass Distribution:\n", df['species'].value_counts())
print("\nDataset Info:")
print(df.info())

# 5. Data Visualization
sns.pairplot(df, hue='species')
plt.show()

sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='Blues')
plt.title("Feature Correlation")
plt.show()

# 6. Encode labels
le = LabelEncoder()
df['species'] = le.fit_transform(df['species'])  # 0=setosa, 1=versicolor, 2=virginica

# 7. Split data
X = df.drop('species', axis=1)
y = df['species']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 8. Train the model
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# 9. Evaluate
y_pred = model.predict(X_test)
print("\nAccuracy Score:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# 10. Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Greens', xticklabels=le.classes_, yticklabels=le.classes_)
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()